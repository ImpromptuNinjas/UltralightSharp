name: Build & Test
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]
jobs:
  build-and-test:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - run: git remote add gitlab https://gitlab.com/tyler-in/UltralightSharp.git
      - run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - run: git lfs pull || git lfs pull gitlab
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.300
      - name: Install dependencies
        run: dotnet restore -f UltralightSharp/UltralightSharp.csproj
      - name: Build
        run: dotnet build -c Release --no-restore UltralightSharp/UltralightSharp.csproj
      - name: Run Demo
        run: dotnet run -c Release --project UltralightSharp.Demo
      - uses: actions/upload-artifact@v2
        with:
          name: NuGet Package(s) built by ${{ matrix.os }}
          path: '**/*.nupkg'
          if-no-files-found: error
      - name: Build SilkNetSandbox
        run: dotnet run -c Release --project SilkNetSandbox
      - uses: actions/upload-artifact@v2
        with:
          name: SilkNetSandbox for ${{ matrix.os }}
          path: |
            SilkNetSandbox/bin/Release/netcoreapp3.1/win-x64/
            SilkNetSandbox/bin/Release/netcoreapp3.1/linux-x64/
            SilkNetSandbox/bin/Release/netcoreapp3.1/osx-x64/
          if-no-files-found: error
