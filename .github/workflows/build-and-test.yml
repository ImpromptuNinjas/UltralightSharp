name: Build & Test
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]
jobs:
  build-and-test-ubuntu:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.300
    - name: Install dependencies
      run: dotnet restore -f UltralightSharp/UltralightSharp.csproj
    - name: Build
      run: dotnet build -c Release --no-restore UltralightSharp/UltralightSharp.csproj
    - name: Run Demo
      run: dotnet run -c Release --project UltralightSharp.Demo
    - uses: actions/upload-artifact@v2
      with:
        name: NuPkg-Linux
        path: '**/*.nupkg'
        if-no-files-found: error

  build-and-test-win64:
    runs-on: windows-latest
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.300
    - name: Install dependencies
      run: dotnet restore -f UltralightSharp/UltralightSharp.csproj
    - name: Build
      run: dotnet build -c Release --no-restore UltralightSharp/UltralightSharp.csproj
    - name: Run Demo
      run: dotnet run -c Release --project UltralightSharp.Demo
    - uses: actions/upload-artifact@v2
      with:
        name: NuPkg-Win64
        path: '**/*.nupkg'
        if-no-files-found: error

  build-and-test-macos:
    runs-on: macos-latest
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.300
    - name: Install dependencies
      run: dotnet restore -f UltralightSharp/UltralightSharp.csproj
    - name: Build
      run: dotnet build -c Release --no-restore UltralightSharp/UltralightSharp.csproj
    - name: Run Demo
      run: dotnet run -c Release --project UltralightSharp.Demo
      env:
        DYLD_PRINT_WARNINGS: 1
        DYLD_PRINT_CS_NOTIFICATIONS: 1
        DYLD_PRINT_INTERPOSING: 1
        DYLD_PRINT_CODE_SIGNATURES: 1
    - uses: actions/upload-artifact@v2
      with:
        name: NuPkg-OSX
        path: '**/*.nupkg'
        if-no-files-found: error

  request-unity-2018-4-lts-alf:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[unity alf]')"
    steps:
    - name: Request ALF
      id: getManualLicenseFile
      uses: webbertakken/unity-request-manual-activation-file@v1.1
      with:
        unityVersion: 2018.4.25f1
    - name: Upload ALF as artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  unity-2018-4-lts-tests:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[unity alf]')"
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Unity - Command Runner
        uses: ImpromptuNinjas/unity-runner@master
        timeout-minutes: 6
        with:
          projectPath: UltralightSharp.UnityTests
          unityVersion: 2018.4.25f1
          args: -quit -executeMethod NugetForUnity.NugetHelper.Restore -nographics -noUpm
      - name: Run the Unity Test Runner
        uses: webbertakken/unity-test-runner@v1.4
        with:
          testMode: playmode
          projectPath: UltralightSharp.UnityTests
          unityVersion: 2018.4.25f1
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: Test results
          path: ${{ steps.myTestStep.outputs.artifactsPath }}