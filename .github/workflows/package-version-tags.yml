name: Package Version Tags
on:
  push:
    tags:
    - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - uses: actions/checkout@v2
      - run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - run: git lfs pull || git lfs pull gitlab
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.401
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Write Official Strong Name Key
        run: echo ${{ secrets.OFFICIAL_SNK }} | base64 -d > official.snk
      - name: Build & Pack Core Libraries
        run: |
          dotnet build -c Release -p:IsOfficial=true UltralightSharp.Core.WinX64/UltralightSharp.Core.WinX64.csproj
          dotnet build -c Release -p:IsOfficial=true UltralightSharp.Core.LinuxX64/UltralightSharp.Core.LinuxX64.csproj
          dotnet build -c Release -p:IsOfficial=true UltralightSharp.Core.OsxX64/UltralightSharp.Core.OsxX64.csproj
          dotnet build -c Release -p:IsOfficial=true UltralightSharp.Core/UltralightSharp.Core.csproj
      - name: Install dependencies
        run: dotnet restore -f UltralightSharp/UltralightSharp.csproj
        env:
          OFFICIAL_SNK: ${{secrets.OFFICIAL_SNK}}
      - name: Get Tag Value
        uses: tyler-in/get-tag@master
        id: tag
        with:
          tagRegex: 'v(.*)$'
      - name: Build & Pack Main Library
        run: dotnet build -c Release -p:IsOfficial=true UltralightSharp/UltralightSharp.csproj
      - name: Push Nupkgs
        run: |
          dotnet nuget push -s nuget.org -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate ImpromptuNinjas.UltralightSharp.Core.WinX64.${{ steps.tag.outputs.tag }}.nupkg
          dotnet nuget push -s nuget.org -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate ImpromptuNinjas.UltralightSharp.Core.LinuxX64.${{ steps.tag.outputs.tag }}.nupkg
          dotnet nuget push -s nuget.org -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate ImpromptuNinjas.UltralightSharp.Core.OsxX64.${{ steps.tag.outputs.tag }}.nupkg
          dotnet nuget push -s nuget.org -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate ImpromptuNinjas.UltralightSharp.Core.${{ steps.tag.outputs.tag }}.nupkg
          dotnet nuget push -s nuget.org -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate ImpromptuNinjas.UltralightSharp.${{ steps.tag.outputs.tag }}.nupkg
