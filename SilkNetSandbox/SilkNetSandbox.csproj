<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <RootNamespace />
        <LangVersion>8</LangVersion>
        <Nullable>enable</Nullable>
        <NoWarn>CS8002</NoWarn>
    </PropertyGroup>

    <Choose>
        <When Condition="$([MSBuild]::IsOsPlatform('Windows'))">
            <PropertyGroup>
                <RuntimeIdentifier>win-x64</RuntimeIdentifier>
            </PropertyGroup>
            <ItemGroup>
                <None Include="runtimes\win-x64\native\*">
                    <Pack>True</Pack>
                    <PackageCopyToOutput>True</PackageCopyToOutput>
                    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
                    <CopyToPublishDirectory>Always</CopyToPublishDirectory>
                    <PackagePath>%(Identity)</PackagePath>
                    <Link>%(Filename)%(Extension)</Link>
                    <Visible>false</Visible>
                </None>
            </ItemGroup>
        </When>
        <When Condition="$([MSBuild]::IsOsPlatform('Linux'))">
            <PropertyGroup>
                <RuntimeIdentifier>linux-x64</RuntimeIdentifier>
            </PropertyGroup>
            <ItemGroup>
                <None Include="runtimes\linux-x64\native\*">
                    <Pack>True</Pack>
                    <PackageCopyToOutput>True</PackageCopyToOutput>
                    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
                    <CopyToPublishDirectory>Always</CopyToPublishDirectory>
                    <PackagePath>%(Identity)</PackagePath>
                    <Link>%(Filename)%(Extension)</Link>
                    <Visible>false</Visible>
                </None>
            </ItemGroup>
        </When>
        <When Condition="$([MSBuild]::IsOsPlatform('OSX'))">
            <PropertyGroup>
                <RuntimeIdentifier>osx-x64</RuntimeIdentifier>
            </PropertyGroup>
            <ItemGroup>
                <None Include="runtimes\osx-x64\native\*">
                    <Pack>True</Pack>
                    <PackageCopyToOutput>True</PackageCopyToOutput>
                    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
                    <CopyToPublishDirectory>Always</CopyToPublishDirectory>
                    <PackagePath>%(Identity)</PackagePath>
                    <Link>%(Filename)%(Extension)</Link>
                    <Visible>false</Visible>
                </None>
            </ItemGroup>
        </When>
    </Choose>

    <Target Name="CheckRuntimeIdentifier" BeforeTargets="Build" Condition="'$(RuntimeIdentifier)'==''">
        <Error Text="RuntimeIdentifier property not set." />
    </Target>

    <ItemGroup>
        <ProjectReference Include="../UltralightSharp/UltralightSharp.csproj">
            <ExcludeAssets>all</ExcludeAssets>
        </ProjectReference>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Ansi" Version="1.0.3" />
        <PackageReference Include="CommandLineParser" Version="2.8.0" />
        <PackageReference Include="Fody" Version="6.2.4" PrivateAssets="all" />
        <PackageReference Include="InlineIL.Fody" Version="1.5.0" PrivateAssets="all" />
        <PackageReference Include="JetBrains.Annotations" Version="2020.1.0" />
        <PackageReference Include="Silk.NET.Core" Version="2.0.0-preview" />
        <PackageReference Include="Silk.NET.EGL" Version="1.5.0" />
        <PackageReference Include="Silk.NET.EGL.Extensions.ANGLE" Version="1.5.0" />
        <PackageReference Include="Silk.NET.EGL.Extensions.EXT" Version="1.5.0" />
        <PackageReference Include="Silk.NET.EGL.Extensions.KHR" Version="1.5.0" />
        <PackageReference Include="Silk.NET.Input" Version="2.0.0-preview" />
        <PackageReference Include="Silk.NET.OpenGLES" Version="2.0.0-preview" />
        <PackageReference Include="Silk.NET.OpenGLES.Extensions.ANGLE" Version="2.0.0-preview" />
        <PackageReference Include="Silk.NET.OpenGLES.Extensions.EXT" Version="2.0.0-preview" />
        <PackageReference Include="Silk.NET.OpenGLES.Extensions.KHR" Version="2.0.0-preview" />
        <PackageReference Include="Silk.NET.OpenGLES.Extensions.MESA" Version="2.0.0-preview" />
        <PackageReference Include="Silk.NET.OpenGLES.Extensions.OES" Version="2.0.0-preview" />
        <PackageReference Include="Silk.NET.Windowing" Version="2.0.0-preview" />
        <PackageReference Include="SixLabors.ImageSharp" Version="1.0.0" />
    </ItemGroup>

    <ItemGroup>
        <None Remove="embedded\**\*" />
        <EmbeddedResource Include="embedded\**\*" />
        <EmbeddedResource Remove="runtimes\**" />
        <Compile Remove="embedded\**" />
        <Compile Remove="runtimes\**" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="assets\index.html">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <Compile Update="**\*.*.cs">
            <WouldDependOn>$([System.Text.RegularExpressions.Regex]::Replace('%(Filename)', '^(.*?)\..*$', '$1.cs'))</WouldDependOn>
            <DependentUpon Condition="'%(DependentUpon)' == '' And '%(WouldDependOn)' != '%(Filename)'">%(WouldDependOn)</DependentUpon>
        </Compile>
    </ItemGroup>
</Project>
