<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <AssemblyName>ImpromptuNinjas.UltralightSharp</AssemblyName>
        <IncludeSource>False</IncludeSource>
        <LangVersion>11</LangVersion>
        <TargetFrameworks>netstandard2.0;netstandard2.1;net6.0;net7.0</TargetFrameworks>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <GeneratePackageOnBuild Condition="'$(Configuration)'=='Release'">true</GeneratePackageOnBuild>
        <Nullable>enable</Nullable>
        <RootNamespace>ImpromptuNinjas.UltralightSharp</RootNamespace>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId>ImpromptuNinjas.UltralightSharp</PackageId>
        <Title>ImpromptuNinjas.UltralightSharp</Title>
        <Description>A multi-platform .NET binding of the Ultralight project.</Description>
        <Authors>Tyler Young</Authors>
        <Copyright>Copyright Â© 2020 Tyler Young</Copyright>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageOutputDir>$(SolutionDir)</PackageOutputDir>
        <RepositoryUrl>https://github.com/ImpromptuNinjas/UltralightSharp.git</RepositoryUrl>
        <PackageTags>ultralight webkit webcore appcore ultralight-ux</PackageTags>
        <PackageIcon>icon.png</PackageIcon>
        <IsPackable>True</IsPackable>
        <GenerateAssemblyConfigurationAttribute>False</GenerateAssemblyConfigurationAttribute>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="JetBrains.Annotations" Version="2022.3.1" PrivateAssets="all" />
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="all" />
        <PackageReference Include="Fody" Version="6.7.0" PrivateAssets="all" />
        <PackageReference Include="InlineIL.Fody" Version="1.7.4" PrivateAssets="all" />
        <PackageReference Include="InfoOf.Fody" Version="2.1.1" PrivateAssets="all" />
        <PackageReference Include="ModuleInit.Fody" Version="2.1.1" PrivateAssets="all" />
        <PackageReference Include="ImpromptuNinjas.UltralightSharp.Core" Version="[$(Version)]" IncludeAssets="native;contentfiles" />
    </ItemGroup>

    <Choose>
        <When Condition="'$(TargetFramework)'=='net45'">
            <ItemGroup>
                <PackageReference Include="System.Memory" Version="4.5.4" />
                <PackageReference Include="System.ValueTuple" Version="4.5.0" />
                <PackageReference Include="System.Numerics.Vectors" Version="4.5.0" />
                <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0" PrivateAssets="all" />
            </ItemGroup>
        </When>
        <When Condition="$(TargetFramework.StartsWith('netstandard'))">
            <Choose>
                <When Condition="$(TargetFramework.EndsWith('2.1'))">
                    <ItemGroup>
                        <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.0.0" />
                    </ItemGroup>
                </When>
                <When Condition="$(TargetFramework.EndsWith('2.0'))">
                    <ItemGroup>
                        <PackageReference Include="System.Memory" Version="4.5.5" />
                    </ItemGroup>
                </When>
            </Choose>
        </When>
    </Choose>

    <ItemGroup>
        <None Include="..\icon.png">
            <Pack>True</Pack>
            <PackageCopyToOutput>False</PackageCopyToOutput>
            <PackagePath />
            <Link>icon.png</Link>
        </None>
        <None Include="..\README.md">
            <Pack>True</Pack>
            <PackageCopyToOutput>False</PackageCopyToOutput>
            <PackagePath />
            <Link>README.md</Link>
        </None>
        <None Include="..\LICENSE">
            <Pack>True</Pack>
            <PackageCopyToOutput>False</PackageCopyToOutput>
            <PackagePath />
            <Link>LICENSE</Link>
        </None>
    </ItemGroup>

    <ItemGroup>
        <Content Include="Ultralight*.txt">
            <Pack>True</Pack>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <PackageCopyToOutput>True</PackageCopyToOutput>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <None Include="runtimes\*\**">
            <Pack>True</Pack>
            <PackagePath>runtimes\</PackagePath>
            <PackageCopyToOutput>False</PackageCopyToOutput>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            <Link>%(Identity)</Link>
        </None>
        <Content Remove="runtimes\*\**" />
    </ItemGroup>

    <ItemGroup>
        <Compile Update="**\*.*.cs">
            <WouldDependOn>$([System.Text.RegularExpressions.Regex]::Replace('%(Filename)', '^(.*?)\..*$', '$1.cs'))</WouldDependOn>
            <DependentUpon Condition="'%(DependentUpon)' == '' And '%(WouldDependOn)' != '%(Filename)'">%(WouldDependOn)</DependentUpon>
        </Compile>
        <Compile Update="Enums\JsTypedArrayType.cs">
          <WouldDependOn>JsTypedArrayType</WouldDependOn>
        </Compile>
        <Compile Update="Enums\JsPropertyAttribute.cs">
          <WouldDependOn>JsPropertyAttribute</WouldDependOn>
        </Compile>
        <Compile Update="Enums\JsType.cs">
          <WouldDependOn>JsType</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectCallAsConstructorCallback.cs">
          <WouldDependOn>ObjectCallAsConstructorCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectCallAsFunctionCallback.cs">
          <WouldDependOn>ObjectCallAsFunctionCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectConvertToTypeCallback.cs">
          <WouldDependOn>ObjectConvertToTypeCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectDeletePropertyCallback.cs">
          <WouldDependOn>ObjectDeletePropertyCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectFinalizeCallback.cs">
          <WouldDependOn>ObjectFinalizeCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectGetPropertyCallback.cs">
          <WouldDependOn>ObjectGetPropertyCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectGetPropertyNamesCallback.cs">
          <WouldDependOn>ObjectGetPropertyNamesCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectHasInstanceCallback.cs">
          <WouldDependOn>ObjectHasInstanceCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectHasPropertyCallback.cs">
          <WouldDependOn>ObjectHasPropertyCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectInitializeCallback.cs">
          <WouldDependOn>ObjectInitializeCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\ObjectSetPropertyCallback.cs">
          <WouldDependOn>ObjectSetPropertyCallback</WouldDependOn>
        </Compile>
        <Compile Update="Callbacks\TypedArrayBytesDeallocatorCallback.cs">
          <WouldDependOn>TypedArrayBytesDeallocatorCallback</WouldDependOn>
        </Compile>
        <Compile Update="OpaqueStructs\JsString.cs">
          <WouldDependOn>JsString</WouldDependOn>
        </Compile>
        <Compile Update="OpaqueStructs\JsValue.cs">
          <WouldDependOn>JsValue</WouldDependOn>
        </Compile>
        <Compile Update="OpaqueStructs\JsPropertyNameAccumulator.cs">
          <WouldDependOn>JsPropertyNameAccumulator</WouldDependOn>
        </Compile>
        <Compile Update="OpaqueStructs\JsPropertyNameArray.cs">
          <WouldDependOn>JsPropertyNameArray</WouldDependOn>
        </Compile>
        <Compile Update="OpaqueStructs\JsContextGroup.cs">
          <WouldDependOn>JsContextGroup</WouldDependOn>
        </Compile>
        <Compile Update="Enums\JsClassAttribute.cs">
          <WouldDependOn>JsClassAttribute</WouldDependOn>
        </Compile>
        <Compile Update="OpaqueStructs\JsClass.cs">
          <WouldDependOn>JsClass</WouldDependOn>
        </Compile>
        <Compile Update="CallbackStructs\JsClassDefinition.cs">
          <WouldDependOn>JsClassDefinition</WouldDependOn>
        </Compile>
        <Compile Update="CallbackStructs\JsStaticFunction.cs">
          <WouldDependOn>JsStaticFunction</WouldDependOn>
        </Compile>
        <Compile Update="CallbackStructs\JsStaticValue.cs">
          <WouldDependOn>JsStaticValue</WouldDependOn>
        </Compile>
        <Compile Update="DataStructs\JsObjectPrivate.cs">
          <WouldDependOn>JsObjectPrivate</WouldDependOn>
        </Compile>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\UltralightSharp.Core\UltralightSharp.Core.csproj">
          <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
          <ExcludeAssets>all</ExcludeAssets>
      </ProjectReference>
    </ItemGroup>

</Project>